{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/michroma_1d393e70.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"michroma_1d393e70-module__Km-6qW__className\",\n  \"variable\": \"michroma_1d393e70-module__Km-6qW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/michroma_1d393e70.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Michroma%22,%22arguments%22:[{%22weight%22:%22400%22,%22subsets%22:[%22latin%22],%22variable%22:%22--font-michroma%22}],%22variableName%22:%22michroma%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Michroma', 'Michroma Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NFT%20Guard%20Web%20Project/nfts-guard/frontend/src/app/metadata.ts"],"sourcesContent":["// src/app/metadata.ts\nimport type { Metadata } from \"next\";\n\nexport const defaultMetadata: Metadata = {\n  title: \"NFTs Guard - Protect Your NFTs\",\n  description:\n    \"Verify NFT authenticity and protect yourself from scams with NFTs Guard. Enjoy 3 free scans daily or upgrade for unlimited checks.\",\n  keywords: [\n    \"NFT\",\n    \"NFT Security\",\n    \"Blockchain Verification\",\n    \"Crypto Scam Protection\",\n    \"Digital Collectibles\",\n  ],\n  authors: [{ name: \"NFTs Guard Team\", url: \"https://nftsguard.com\" }],\n  icons: {\n    icon: \"/favicon.ico\",\n    apple: \"/apple-touch-icon.png\",\n  },\n  openGraph: {\n    title: \"NFTs Guard - Verify Your NFTs\",\n    description:\n      \"Real-time NFT verification to avoid scams and protect your digital assets.\",\n    url: \"https://nftsguard.com\",\n    siteName: \"NFTs Guard\",\n    images: [\n      {\n        url: \"https://nftsguard.com/og-image.jpg\",\n        width: 1200,\n        height: 630,\n        alt: \"NFTs Guard Dashboard\",\n      },\n    ],\n    type: \"website\",\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    site: \"@nftsguard\",\n    creator: \"@nftsguard\",\n    title: \"NFTs Guard - Verify Your NFTs\",\n    description:\n      \"Never get scammed again! Verify NFTs before you buy with NFTs Guard.\",\n    images: [\"https://nftsguard.com/twitter-image.jpg\"],\n  },\n};\n\nexport default defaultMetadata;\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AAGf,MAAM,kBAA4B;IACvC,OAAO;IACP,aACE;IACF,UAAU;QACR;QACA;QACA;QACA;QACA;KACD;IACD,SAAS;QAAC;YAAE,MAAM;YAAmB,KAAK;QAAwB;KAAE;IACpE,OAAO;QACL,MAAM;QACN,OAAO;IACT;IACA,WAAW;QACT,OAAO;QACP,aACE;QACF,KAAK;QACL,UAAU;QACV,QAAQ;YACN;gBACE,KAAK;gBACL,OAAO;gBACP,QAAQ;gBACR,KAAK;YACP;SACD;QACD,MAAM;IACR;IACA,SAAS;QACP,MAAM;QACN,MAAM;QACN,SAAS;QACT,OAAO;QACP,aACE;QACF,QAAQ;YAAC;SAA0C;IACrD;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NFT%20Guard%20Web%20Project/nfts-guard/frontend/src/context/ScanContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ScanProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScanProvider() from the server but ScanProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ScanContext.tsx <module evaluation>\",\n    \"ScanProvider\",\n);\nexport const useScan = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScan() from the server but useScan is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ScanContext.tsx <module evaluation>\",\n    \"useScan\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6DACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,6DACA","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NFT%20Guard%20Web%20Project/nfts-guard/frontend/src/context/ScanContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ScanProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScanProvider() from the server but ScanProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ScanContext.tsx\",\n    \"ScanProvider\",\n);\nexport const useScan = registerClientReference(\n    function() { throw new Error(\"Attempted to call useScan() from the server but useScan is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ScanContext.tsx\",\n    \"useScan\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,yCACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,yCACA","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NFT%20Guard%20Web%20Project/nfts-guard/frontend/src/app/layout.tsx"],"sourcesContent":["import { Michroma, Geist, Geist_Mono } from \"next/font/google\";\nimport { defaultMetadata } from \"@/app/metadata\";\nimport { ScanProvider } from \"@/context/ScanContext\";\n// import ClientProvider from \"@/components/ClientProvider\";\nimport \"@/app/globals.css\";\n\nimport { LayoutProps } from \"@/types/layout\";\n\n// Fontu inicializācija\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nconst michroma = Michroma({\n  weight: \"400\",\n  subsets: [\"latin\"],\n  variable: \"--font-michroma\",\n});\n\nexport const metadata = defaultMetadata;\n\nexport default async function RootLayout({ children, params }: LayoutProps) {\n  const { locale } = await params;\n\n  return (\n    <html\n      lang={locale}\n      className={`${geistSans.variable} ${geistMono.variable} ${michroma.variable}`}\n    >\n      <body className=\"antialiased bg-background text-text transition-colors duration-300\">\n        {/* <ClientProvider> */}\n        <ScanProvider>{children}</ScanProvider>\n        {/* </ClientProvider> */}\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;;;;;;;;AAuBO,MAAM,WAAW,sHAAA,CAAA,kBAAe;AAExB,eAAe,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAe;IACxE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEzB,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,4IAAA,CAAA,UAAQ,CAAC,QAAQ,EAAE;kBAE7E,cAAA,8OAAC;YAAK,WAAU;sBAEd,cAAA,8OAAC,8HAAA,CAAA,eAAY;0BAAE;;;;;;;;;;;;;;;;AAKvB","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file://D%3A/NFT%20Guard%20Web%20Project/nfts-guard/frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}